<?php declare(strict_types=1);
/**
 * ProcessEight
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade this module to newer
 * versions in the future. If you wish to customize this module for your
 * needs please contact ProcessEight for more information.
 *
 * @category    watson-safari
 * @package     code-coverage-to-html.php
 * @copyright   Copyright (c) 2019 ProcessEight
 * @author      ProcessEight
 *
 */

/**
 * @see https://derickrethans.nl/path-branch-coverage.html
 */
/*
 * Based on:
   +----------------------------------------------------------------------+
   | Xdebug                                                               |
   +----------------------------------------------------------------------+
   | Copyright (c) 2002-2018 Derick Rethans                               |
   +----------------------------------------------------------------------+
   | This source file is subject to version 1.01 of the Xdebug license,   |
   | that is bundled with this package in the file LICENSE, and is        |
   | available at through the world-wide-web at                           |
   | https://xdebug.org/license.php                                       |
   | If you did not receive a copy of the Xdebug license and are unable   |
   | to obtain it through the world-wide-web, please send a note to       |
   | derick@xdebug.org so we can mail you a copy immediately.             |
   +----------------------------------------------------------------------+
   | Authors: Derick Rethans <derick@xdebug.org>                          |
   +----------------------------------------------------------------------+
 */

/**
 * Convert code coverage data generated by xdebug_get_code_coverage() into a HTML page
 *
 * @param array[] $info
 *
 * @return string
 */
function code_coverage_to_html(array $info)
{
    $output = "<html>\n";

    ksort($info);
    foreach ($info as $filename => $file) {
        // Don't output any data relating to the files which contain the Xdebug code coverage start/end logic
        if (preg_match('/dump-branch-coverage.inc$/', $filename)
            || preg_match('/branch-coverage-to-[a-z]+.php$/', $filename)) {
            continue;
        }
        if (!isset($file['functions'])) {
            continue;
        }

        $output .= sprintf("<div id='%s' style='border: 1px solid red; padding: 10px'>\n", md5($filename));
        $output .= sprintf("<p>%s</p>\n", $filename);

        ksort($file['functions']);
        foreach ($file['functions'] as $functionName => $function) {
            $output .= sprintf("<div id='%s' style='border: 1px solid blue; padding: 10px'>\n", md5($functionName));
            $output .= sprintf("<p>%s ENTER</p>\n", $functionName);

            $list = '';
            foreach ($function['branches'] as $branchIndex => $branch) {
                // If this 'branch' (block of executable code) was not executed, we don't want to know about it
                if ($branch['hit'] === 0) {
                    continue;
                }
                $list .= sprintf("<li>%d-%d</li>\n", $branch['line_start'], $branch['line_end']);
            }
            $output .= $list ? "<ul>\n$list</ul>\n" : '';
            $output .= sprintf("<p>%s EXIT</p>\n", $functionName);
            $output .= sprintf("<!-- END DIV %s -->\n", md5($functionName));
            $output .= "</div>\n";
        }
        $output .= sprintf("<!-- END DIV %s -->\n", md5($filename));
        $output .= "</div>\n";
    }

    $output .= "<html>\n";

    return $output;
}
